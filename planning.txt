24th of July, 2023

Initially thought we’d just need to increment and decrement the life counters. But I remember when using these things in person the app would keep track of how much you’d just added/removed, which it would display for about 3 seconds. For example if you mashed the “subtract” button 4 times, it would display the new life total with 4 subtracted, but also a little bubble indicating -4. And if you clicked “add” before this disappeared, it would change the bubble to -3. So I’m thinking we might want to do something like keep track of how much the user has clicked in local react state, and then if they haven’t clicked it for 3 seconds or whatever we submit an “updateLifeByAmount” to the state and reset the local adjustment to 0.

It just occurred to me that it makes sense to allow for tracking more than just 2 players. Obviously it should default to 2 but we could totally allow for more. If that’s true we need to adjust how our system works to account for this. It means players are more like entities that can be added or removed.

I’m going to try using uuids for player ids. This is so overkill it’s disgusting but I want the practice.

Small discovery around getting the app to fill the height of the device. The the html element is the root of all web pages, and does not have a default height of 100%, so this must be changed. In addition the body inside the html must be given a height of 100%. And finally, in react apps there is a div inside the body with the id "root". This div does not default to 100% either and must be given that as well.

We've managed to add the main features pretty quickly. Next I want to add the timed adjuster I described above. Clicking plus or minus will do 2 things: set a local state value for the amount to adjust the player score by, and start a timeout function which will adjust the player score by the local state vaue. When the plus or minus are hit anytime, this will add/subtract to the local state value, and reset the timeout function. When the timeout function triggers it will reset the local state value in addition to changing the player state. We'll also have to add some fun css to make changes clear.

Adding the timed adjuster wasn't too much of a problem. However I've found that the animation to make the indicator disappear is trickier than expected. I need to use a separate timeout to trigger the animation because I need it to reset